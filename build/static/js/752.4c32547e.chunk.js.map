{"version":3,"file":"static/js/752.4c32547e.chunk.js","mappings":"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","sources":["components/Pagination/index.js","pages/Locations/index.js"],"sourcesContent":["import React from \"react\";\n\nimport {\n  Form,\n  FormControl,\n  Button,\n  Table,\n  Modal,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n} from \"react-bootstrap\";\n\nconst CustomPagination = (props) => {\n  const { limit, pages, currentPage, PaginationHandleClick } = props;\n\n  let arr = [];\n  if (pages <= 5) {\n    for (let i = 0; i < pages; i++) {\n      arr.push({\n        offSet: i * limit,\n        page: i + 1,\n      });\n    }\n  } else if (pages >= 5 && currentPage <= 4) {\n    for (let i = 0; i <= 4; i++) {\n      arr.push({\n        offSet: i * limit,\n        page: i + 1,\n      });\n    }\n\n    arr.push({\n      offSet: \"...\",\n      page: \"...\",\n    });\n\n    arr.push({\n      offSet: (pages - 1) * limit,\n      page: pages,\n    });\n  } else if (pages >= 5 && currentPage >= 5 && currentPage <= pages - 4) {\n    arr.push({\n      offSet: 0,\n      page: 1,\n    });\n\n    arr.push({\n      offSet: \"...\",\n      page: \"...\",\n    });\n\n    for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n      arr.push({\n        offSet: (i - 1) * limit,\n        page: i,\n      });\n    }\n\n    arr.push({\n      offSet: \"...\",\n      page: \"...\",\n    });\n\n    arr.push({\n      offSet: (pages - 1) * limit,\n      page: pages,\n    });\n  } else {\n    arr.push({\n      offSet: 0,\n      page: 1,\n    });\n\n    arr.push({\n      offSet: \"...\",\n      page: \"...\",\n    });\n\n    for (let i = pages - 4; i <= pages; i++) {\n      arr.push({\n        offSet: (i - 1) * limit,\n        page: i,\n      });\n    }\n  }\n\n  return (\n    <>\n      <div className=\"paginationWrapper\">\n        <Pagination>\n          <Pagination.Prev\n            disabled={currentPage == 1}\n            onClick={() =>\n              PaginationHandleClick((currentPage - 2) * limit, currentPage - 1)\n            }\n          />\n\n          {arr.map((item, i) => {\n            return item.page === currentPage ? (\n              <Pagination.Item\n                disabled={item.page === \"...\"}\n                className=\"active\"\n                onClick={() => PaginationHandleClick(item.offSet, item.page)}\n                key={i}\n              >\n                {item.page}\n              </Pagination.Item>\n            ) : (\n              <Pagination.Item\n                disabled={item.page === \"...\"}\n                onClick={() => PaginationHandleClick(item.offSet, item.page)}\n                key={i}\n              >\n                {item.page}\n              </Pagination.Item>\n            );\n          })}\n\n          <Pagination.Next\n            disabled={currentPage == pages}\n            onClick={() =>\n              PaginationHandleClick(currentPage * limit, currentPage + 1)\n            }\n          />\n        </Pagination>\n      </div>\n    </>\n  );\n};\n\nexport default CustomPagination;\n","import {\n  Form,\n  FormControl,\n  Button,\n  Table,\n  Modal,\n} from \"react-bootstrap\";\nimport \"./style.scss\";\nimport \"../../assets/scss/main.scss\";\nimport searchIcon from \"../../assets/images/searchIcon.svg\";\nimport exportIcon from \"../../assets/images/exportIcon.svg\";\nimport { AUTH_ENDPOINT } from \"../../config/endPoints\";\nimport { useState, useEffect, useRef } from \"react\";\nimport closeIcon from \"../../assets/images/closeIcon.svg\";\nimport editIcon from \"../../assets/images/editIcon.svg\";\nimport deleteIcon from \"../../assets/images/deleteIcon.svg\";\nimport { BASE_URL } from \"../../config/endPoints\";\nimport { httpDelete, httpGet, httpPost, httpPut } from \"../../utils/http\";\nimport { errorToaster, successToaster } from \"../../components/Toaster\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { CSVLink } from \"react-csv\";\nimport CustomPagination from \"../../components/Pagination\";\nimport { useDebounce } from \"use-debounce\";\nimport {\n  ADDED,\n  DELETED,\n  DELETE_CONFIRMATION,\n  MANDATORY,\n  SOMETHING_WENT_WRONG,\n  STATUS_CHANGED,\n  UPDATED,\n} from \"../../config/const\";\nimport Loader from \"../../components/Loader\";\nimport { useFormik } from \"formik\";\n\n\nfunction Locations() {\n  const [showLocation, setShowLocation] = useState(false);\n  const [showUpdateLocation, setUpdateLocation] = useState(false);\n  const [locationData, setLocationData] = useState([]);\n  const [locationDetails, setLocationDetails] = useState([]);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [deleteId, setDeleteId] = useState();\n  const locationsClose = () => {\n    setShowLocation(false);\n  };\n  const [searchString, setSearchString] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n  const [limit, setLimit] = useState(50);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [offSet, setOffSet] = useState(0);\n  const [pages, setPages] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [exportData, setExportData] = useState([]);\n  const [searchValue] = useDebounce(searchString, 1000);\n  const [paginations, setPaginations] = useState(false);\n  const [updateId, setUpdateId] = useState();\n  const csvLink = useRef(null);\n\n\n  // get data on loading the page first time\n  useEffect(() => {\n    setLoading(true);\n    getData();\n  }, []);\n\n  //search Location Data\n  useEffect(() => {\n    if (searchValue.length === 0) {\n      getData();\n    } else {\n      getSearchData();\n    }\n  }, [searchValue]);\n\n  const locationsOpen = (type) => {\n    if (type == \"new\") {\n      formik.resetForm();\n      setUpdateId();\n      setShowLocation(true);\n    }\n    else {\n      setShowLocation(true);\n\n    }\n\n  };\n\n  // to close delete modal\n  const closeDeleteModal = () => {\n    setShowDeleteModal(false);\n    setCityName(\"\");\n  };\n\n  //Get Data\n  async function getData(offSet = 0) {\n    setLoading(true);\n    await httpGet(\n      `${BASE_URL}/auth/location?offSet=${offSet}&limit=${limit}`\n    ).then((res) => {\n      if (res?.data) {\n        setLoading(false);\n        setPages(res?.data?.pages);\n        setLocationData(res?.data?.records);\n        res?.data?.records.length > 10 && setPaginations(true);\n      }\n    });\n  }\n  const getLocationAllData = async () => {\n    setLoading(true);\n    await httpGet(\n      `${BASE_URL}/auth/location?offSet=${0}&limit=${limit * pages}`\n    ).then((res) => {\n      if (res?.data?.records) {\n        let obj = res?.data?.records;\n        let arr = [];\n        obj.map((response, index) => {\n          arr[index] = {\n            city: response?.city ? response?.city : \"Null\",\n            cityEnglish: response?.cityEnglish ? response?.cityEnglish : \"Null\",\n            cityHebrew: response?.cityHebrew ? response?.cityHebrew : \"Null\",\n            createdAt: response?.createdAt ? response?.createdAt : \"Null\",\n            updatedAt: response?.updatedAt ? response?.updatedAt : \"Null\",\n            id: response?._id ? response?._id : \"Null\",\n          };\n        });\n        setExportData(arr);\n        setTimeout(() => {\n          csvLink.current.link.click();\n          setLoading(false);\n        }, 2000);\n      }\n    });\n  };\n  const editButton = (data) => {\n    formik.setFieldValue(\"cityName\", data.cityHebrew);\n    setUpdateId(data._id)\n    setLocationDetails(data);\n    setCityName(data.cityHebrew);\n    locationsOpen();\n\n  };\n  const deleteModalOpen = (id) => {\n    setShowDeleteModal(true);\n    setDeleteId(id);\n  };\n\n  //Delete Location\n  const del = async (data) => {\n    setLoading(true);\n    let res = await httpDelete(`${AUTH_ENDPOINT}/location/${deleteId}`);\n    if (res.status === 200) {\n      setLoading(false);\n      getData();\n      successToaster(DELETED);\n      setTimeout(() => {\n        toast.dismiss();\n      }, 1000);\n    } else {\n      errorToaster(SOMETHING_WENT_WRONG);\n      setTimeout(() => {\n        toast.dismiss();\n      }, 1000);\n    }\n    closeDeleteModal();\n  };\n\n  //update Location\n  const Update = async () => {\n    let data = {\n      city: cityName,\n      id: locationDetails._id,\n    };\n    let res = await httpPut(`${AUTH_ENDPOINT}/location/${data.id}`, data);\n    setLoading(true);\n    if (res.status === 200) {\n      setLoading(false);\n      let objIndex = locationData.findIndex((obj) => obj._id === data.id);\n      locationData[objIndex] = res.data.data;\n      setLocationData(locationData);\n      successToaster(UPDATED);\n      setTimeout(() => {\n        toast.dismiss();\n      }, 1000);\n    } else {\n      errorToaster(SOMETHING_WENT_WRONG);\n      setTimeout(() => {\n        toast.dismiss();\n      }, 1000);\n    }\n  };\n\n  //Save Location\n\n  //close Location Modal\n  const locationClose = async () => {\n    setShowLocation(false);\n  };\n\n  //change status \n  const changeStatus = async (data, e) => {\n    let res = await httpPut(`${AUTH_ENDPOINT}/location/status/${data._id}`);\n    setLoading(true);\n\n    if (res.status === 200) {\n      setLoading(false);\n      getData();\n      locationData.filter((data) => data.status === true);\n      successToaster(STATUS_CHANGED);\n      setTimeout(() => {\n        toast.dismiss();\n      }, 1000);\n    } else {\n      errorToaster(SOMETHING_WENT_WRONG);\n      setTimeout(() => {\n        toast.dismiss();\n      }, 1000);\n    }\n  };\n\n  //  To paginate\n  const PaginationHandleClick = (offset, page) => {\n    setOffSet(offset);\n    setCurrentPage(page);\n    getData(offset);\n  };\n\n  // get search data\n  const getSearchData = async () => {\n    setLoading(true);\n    let res = await httpGet(\n      `${AUTH_ENDPOINT}/location/search?text=${searchValue}&offSet=${offSet}&limit=${limit}`\n    );\n    let response = res?.data?.data;\n    setLoading(false);\n    response.length && setLocationData(response);\n    response.length < 10 && setPaginations(false);\n  };\n\n  const validate = (values) => {\n    const errors = {};\n    if (!values.cityName) {\n      errors.cityName = MANDATORY;\n    }\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      cityName: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n\n      if (updateId) {\n        let data = {\n          city: values.cityName,\n          cityHebrew: values.cityName,\n          cityEnglish: values.cityName,\n          id: updateId,\n        };\n        let res = await httpPut(`${AUTH_ENDPOINT}/location/${data.id}`, data);\n        setLoading(true);\n        if (res.status === 200) {\n          setLoading(false);\n          let objIndex = locationData.findIndex((obj) => obj._id === data.id);\n          locationData[objIndex] = res.data.data;\n          setLocationData(locationData);\n          setShowLocation(false);\n          successToaster(UPDATED);\n          setTimeout(() => {\n            toast.dismiss();\n          }, 1000);\n        } else {\n          errorToaster(SOMETHING_WENT_WRONG);\n          setTimeout(() => {\n            toast.dismiss();\n          }, 1000);\n        }\n      }\n      else {\n        let data = {\n          city: values.cityName,\n          cityEnglish: values.cityName,\n          cityHebrew: values.cityName\n        }\n        let res = await httpPost(`${AUTH_ENDPOINT}/location`, data);\n        setLoading(true);\n        if (res?.status === 200) {\n          setLoading(false);\n          setShowLocation(false);\n          getData();\n          setCityName(\"\");\n          successToaster(ADDED);\n          setTimeout(() => {\n            toast.dismiss();\n          }, 1000);\n        } else {\n          errorToaster(SOMETHING_WENT_WRONG);\n          setTimeout(() => {\n            toast.dismiss();\n          }, 1000);\n        }\n      }\n    }\n  });\n\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className=\"main-content\">\n        <div className=\"listing-headder\">\n          <div className=\"tabing-content-inner\">\n            <div className=\"search-point justify-content-between\">\n              <Form inline=\"true\" className=\"search-box d-flex\">\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"mr-2\"\n                  value={searchString}\n                  onChange={(e) => setSearchString(e.target.value)}\n                />\n                <Button variant=\"outline-success\">\n                  <img src={searchIcon} alt=\"\" />\n                </Button>\n                <Button\n                  onClick={getLocationAllData}\n                  className=\"export-btn btn btn-primary\"\n                >\n                  <img src={exportIcon} alt=\"\" />\n                </Button>\n                <CSVLink\n                  className=\"hidden\"\n                  data={exportData}\n                  ref={csvLink}\n                  target=\"_blank\"\n                ></CSVLink>\n              </Form>\n              <Button onClick={() => locationsOpen('new')} className=\"new-btn\">\n                New\n              </Button>\n            </div>\n            <div className=\"listing-content-table\">\n              <Table responsive className=\"porfile-list\">\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>City</th>\n                    <th>Profile</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {locationData?.map((item, key) => {\n                    return (\n                      <tr key={key}>\n                        <td onClick={(e) => editButton(item)}>{key + 1}</td>\n                        <td onClick={(e) => editButton(item)}>{item?.cityHebrew}</td>\n                        <td onClick={(e) => editButton(item)}>\n                          {item.profile ? item.profile : 0}\n                        </td>\n                        <td>\n                          <div className=\"d-flex\">\n                            <div className=\"statusWrap\">\n                              <label className=\"switch\">\n                                <input\n                                  type=\"checkbox\"\n                                  onChange={(e) => changeStatus(item, e)}\n                                  checked={item.status}\n                                />\n                                <span className=\"slider round\"></span>\n                              </label>\n                            </div> \n                            <img\n                              onClick={(e) => deleteModalOpen(item._id)}\n                              src={deleteIcon}\n                              alt=\"delete\"\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n\n            {/* pagination HTML Start */}\n            {paginations && (\n              <CustomPagination\n                limit={limit}\n                pages={pages}\n                currentPage={currentPage}\n                PaginationHandleClick={PaginationHandleClick}\n              />\n            )}\n            {/* pagination HTML End */}\n\n          </div>\n        </div>\n      </div>\n\n      <Modal\n        backdrop=\"static\"\n        show={showLocation}\n        onHide={locationClose}\n        className=\"location-modal\"\n      >\n        <Form onSubmit={formik.handleSubmit}>\n          <div className=\"crossBtnwrap d-flex justify-content-end\">\n            <Button onClick={locationsClose}>\n              <img src={closeIcon} alt=\"close\" />\n            </Button>\n          </div>\n          <Modal.Body>\n            <Form.Group className=\"form-group\" controlId=\"cityName\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"City\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.cityName}\n              />\n              {formik.errors.cityName && formik.touched.cityName ? (\n                <div className=\"text-danger\">{formik.errors.cityName}</div>\n              ) : null}\n\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button type=\"submit\" className=\"save\" variant=\"primary\">\n              {updateId ? \"Update\" : \"Save\"}\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n      <Modal\n        show={showDeleteModal}\n        onHide={closeDeleteModal}\n        className=\"category-modal\"\n      >\n        <Form>\n          <div className=\"crossBtnwrap d-flex justify-content-end\">\n            <Button>\n              <img src={closeIcon} alt=\"close\" onClick={closeDeleteModal} />\n            </Button>\n          </div>\n          <Modal.Body>\n            <Form.Group className=\"form-group\">\n              <div className=\"text-center content-center\">\n                <h3>{DELETE_CONFIRMATION}</h3>\n                <p>\n                  <Button\n                    type=\"button\"\n                    className=\"save\"\n                    variant=\"info\"\n                    onClick={closeDeleteModal}\n                  >\n                    {\" \"}\n                    No{\" \"}\n                  </Button>{\" \"}\n                  <Button\n                    type=\"button\"\n                    className=\"save\"\n                    variant=\"danger\"\n                    onClick={del}\n                  >\n                    {\" \"}\n                    Yes{\" \"}\n                  </Button>\n                </p>\n              </div>\n            </Form.Group>\n          </Modal.Body>\n        </Form>\n      </Modal>\n    </>\n  );\n}\nexport default Locations;\n"],"names":["props","limit","pages","currentPage","PaginationHandleClick","arr","i","push","offSet","page","className","disabled","onClick","map","item","useState","showLocation","setShowLocation","locationData","setLocationData","setLocationDetails","showDeleteModal","setShowDeleteModal","deleteId","setDeleteId","searchString","setSearchString","setCityName","setCurrentPage","setOffSet","setPages","loading","setLoading","exportData","setExportData","useDebounce","searchValue","paginations","setPaginations","updateId","setUpdateId","csvLink","useRef","useEffect","getData","length","getSearchData","locationsOpen","type","formik","resetForm","closeDeleteModal","httpGet","BASE_URL","then","res","data","records","getLocationAllData","obj","response","index","city","cityEnglish","cityHebrew","createdAt","updatedAt","id","_id","setTimeout","current","link","click","editButton","setFieldValue","del","httpDelete","AUTH_ENDPOINT","status","successToaster","DELETED","toast","errorToaster","SOMETHING_WENT_WRONG","locationClose","changeStatus","e","httpPut","filter","STATUS_CHANGED","useFormik","initialValues","cityName","validate","values","errors","MANDATORY","onSubmit","objIndex","findIndex","UPDATED","httpPost","ADDED","Loader","Form","inline","FormControl","placeholder","value","onChange","target","Button","variant","src","searchIcon","alt","exportIcon","CSVLink","ref","Table","responsive","key","profile","checked","deleteIcon","offset","Modal","backdrop","show","onHide","handleSubmit","closeIcon","controlId","handleChange","onBlur","handleBlur","touched","DELETE_CONFIRMATION"],"sourceRoot":""}